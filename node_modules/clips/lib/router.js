'use strict';
var router = require('koa-router')();
var model = require('./model');
var Q = require('q');
var util = require('./util');

var Post = model.Post;
router.post('/entry', function *() {
  let ctx = this;
  let data = ctx.request.body;
  let defer = Q.defer();

  var entry = new Post({
    // todo should use userId
    authorId: '2121',
    content: data.content
  });

  this.body = yield entry.save()
      .then(function (data) {
        return {
          success: true,
          id: data.id
        };
      });

  yield next;
});

router.get('/entry/:id', function *(next) {
  var params = this.params;
  var defer = Q.defer();
  var ctx = this;

  Post.findById(params.id, function (err, item) {
    if (err) {
      //throw err;
      //defer.reject(new Error(err))
      ctx.throw(404, { error: 'Item not found'});
    } else {
      defer.resolve(item);
    }
  });

  this.body = yield defer.promise;
  yield next;
});

router.get('/handle_github_callback', function *(next) {
  console.log(this.query)
  var user = yield util.getUser(this.query.access_token, 'https://api.github.com/user');
  // check exist and save to db, should not save variables which can change? like avatar, nickname
  this.session.user = user;

  this.body = user;
});

module.exports = router.routes();
